using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Net;
using System.Net.Sockets;
using System.Management;
using System.Threading;
using System.Collections;
using System.IO;
using System.Data;

namespace ServerWindowsForms
{
    public partial class Form1 : Form
    {
        private Socket socke;
        private IPEndPoint Server, remoServer;
        private IPAddress ip, remoip;
        private Socket accSocket, sendsocke = null;
        private Socket Uptsendsocket = null;
        private Socket Picsendsocket = null;
        System.IO.FileStream fs;
        System.IO.BinaryReader strread;
        private DAO dao;
 
        static string remoIP = "";
        static int remoPORT = 0;
        Hashtable oht = new Hashtable();
        static int pv = 0;
        
        public Form1()
        {
            InitializeComponent();
            socke = new Socket(AddressFamily.InterNetwork,
                     SocketType.Stream, ProtocolType.Tcp);
            ip = IPAddress.Parse("10.39.34.34");
            Server = new IPEndPoint(ip, 21888);
            sendsocke = new Socket(AddressFamily.InterNetwork,
             SocketType.Stream, ProtocolType.Tcp);
            Uptsendsocket = new Socket(AddressFamily.InterNetwork,
             SocketType.Stream, ProtocolType.Tcp);
            Picsendsocket = new Socket(AddressFamily.InterNetwork,
 SocketType.Stream, ProtocolType.Tcp);
            dao = new DAO();

        }


        private void Connection()
        {
            string accStr = null;
            int accNum = 0;
            socke.Bind(Server);
            socke.Listen(100);
            while (true)
            {
                try
                {
                    Control.CheckForIllegalCrossThreadCalls = false;
                    accSocket = socke.Accept();
                    if (accSocket.Connected)
                    {
                        InforRichTextBox.AppendText(Dns.GetHostName() + "与客户端建立联系");
                        while (true)
                        {
                            accStr = null;
                            accNum = 0;
                            byte[] accBytes = new byte[1024];
                            NetworkStream ns = new NetworkStream(accSocket);
                            accNum = ns.Read(accBytes, 0, accBytes.Length);
                            if (accNum <= 0)
                                break;
                            accStr = System.Text.Encoding.UTF8.GetString(accBytes).Trim('\0');

                            String FB = dao.process(accStr).ToString();

                            EndPoint a = accSocket.RemoteEndPoint;
                            int start = a.ToString().IndexOf(':');
                            remoIP = a.ToString().Substring(0, start);
                            remoPORT = Convert.ToInt32(a.ToString().Substring(start + 1));
                           

                            InforRichTextBox.AppendText("\n" + "Android：" + accStr);
                            AutoRely(FB);
                        }

                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }

        }



        private void Form1_Load(object sender, EventArgs e)
        {
            try
            {
                Thread thread = new Thread(new ThreadStart(Connection));
                thread.Start();
                Thread Thread2 = new Thread(new ThreadStart(update));
                Thread2.Start();
            }
            catch (Exception se)
            {
                MessageBox.Show(se.Message);
            }
        }

        private void AutoRely(String rely)
        {
            IPEndPoint ServerEP = null;
            ip = IPAddress.Parse(remoIP);
            ServerEP = new IPEndPoint(ip, remoPORT + 1);
            if (!sendsocke.Connected)
            {
                sendsocke.Connect(ServerEP);
            }

            string sendMessageStr = rely;
            try
            {
                if (sendsocke.Connected)
                {
                    byte[] sendBytes = new byte[1024];
                    NetworkStream ns = new NetworkStream(sendsocke);
                    sendBytes = System.Text.UTF8Encoding.UTF8.GetBytes((sendMessageStr).ToCharArray());
                    ns.Write(sendBytes, 0, sendBytes.Length);
                    InforRichTextBox.AppendText("\nPC(port+1)：" + sendMessageStr);
                    pv = 1;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {

            }
        }


        private void UpdaAutoRely(String rely)
        {

            IPEndPoint ServerEP = null;
            ip = IPAddress.Parse(remoIP);
            ServerEP = new IPEndPoint(ip, remoPORT + 2);
            if (!Uptsendsocket.Connected)
            {
                Uptsendsocket.Connect(ServerEP);
            }

            string sendMessageStr = rely;
            try
            {
                if (Uptsendsocket.Connected)
                {
                    byte[] sendBytes = new byte[1024];
                    NetworkStream ns = new NetworkStream(Uptsendsocket);
                    sendBytes = System.Text.UTF8Encoding.UTF8.GetBytes((sendMessageStr).ToCharArray());
                    ns.Write(sendBytes, 0, sendBytes.Length); 
                    InforRichTextBox.AppendText("\nPC(port+2)：" + sendMessageStr);
                    if (sendMessageStr.Length == 7)
                    {
                        string filepath = @"C:\Users\wangxm-wr\Desktop\Chrysanthemum.jpg";
                        sendpic(filepath);
                    }
                }
            }
            catch (Exception ex)
            {
                //pv = 0;
                MessageBox.Show(ex.StackTrace);
                //System.Environment.Exit(0);
            }
            finally
            {
                
            }
        }

        private void update()
        {
           
            while (true)
            {
                while (pv == 1)
                {
                    Thread.Sleep(5000);
                    try
                    {
                        String SQL = "SELECT * FROM car_pale WHERE name='"+dao.getName()+"'";
                        String result = new DAO().SelectAll(SQL);
                        String change = "null";
                        if (!result.Equals("SQLERROR"))
                        {
                            Hashtable nht = new Hashtable();
                            for (int i = 0; i < result.Length / 10; i++)
                            {
                                nht.Add(result.Substring(i * 10, 7), result.Substring(i * 10 + 7, 3));
                            }
                            if (oht.Count == 0)
                            {
                                oht = nht;
                            }
                            else
                            {
                                foreach (DictionaryEntry de1 in nht)
                                {
                                    foreach (DictionaryEntry de2 in oht)
                                    {
                                        if ((de1.Key.Equals(de2.Key)) && (de1.Value.ToString().Equals("已入场")) && (de2.Value.ToString().Equals("已预约")))
                                        {
                                            change = de1.Key.ToString();
                                            break;
                                        }
                                    }
                                    if (change.Length == 7) { break; }
                                }
                            }
                            oht = nht;

                        }
                        UpdaAutoRely(change);
                    }
                    catch (Exception e)
                    {
                        MessageBox.Show(e.StackTrace);
                    }
                }
            }
        }





        private void sendpic(string path)
        {
            IPEndPoint ServerEP = null;

            ip = IPAddress.Parse(remoIP);
         
            ServerEP = new IPEndPoint(ip, remoPORT + 3);


   

            if (!Picsendsocket.Connected)
            {
                Picsendsocket.Connect(ServerEP);
            }

            try
            {
                if (Picsendsocket.Connected)
                {
                    Random r = new Random();
                    int i = r.Next(5);
                    if (i == 0)
                    {
                        fs = new System.IO.FileStream(@"C:\Users\wangxm-wr\Desktop\Chrysanthemum.jpg", System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Read);//
                    }
                    if (i == 1)
                    {
                        fs = new System.IO.FileStream(@"C:\Users\wangxm-wr\Desktop\Desert.jpg", System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Read);//
                    }
                    if (i == 2)
                    {
                        fs = new System.IO.FileStream(@"C:\Users\wangxm-wr\Desktop\Hydrangeas.jpg", System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Read);//
                    } 
                    if (i == 3)
                    {
                        fs = new System.IO.FileStream(@"C:\Users\wangxm-wr\Desktop\Jellyfish.jpg", System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Read); //
                    }
                    if (i == 4)
                    {
                        fs = new System.IO.FileStream(@"C:\Users\wangxm-wr\Desktop\Koala.jpg", System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Read);//
                    }

                    byte[] fssize = new byte[fs.Length];

                     strread = new System.IO.BinaryReader(fs);

                    strread.Read(fssize, 0, fssize.Length - 1);

                    Picsendsocket.Send(fssize);

                    InforRichTextBox.AppendText("\nPC(port+3_PIC) " + "Send"+fssize.Length+"byte");

                    fs.Close();
                    strread.Close();
                  
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
               
                    fs.Close();
                
                strread.Close();
            }
        }

     


    }
}
